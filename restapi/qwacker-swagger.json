{
  "openapi": "3.0.0",
  "paths": {
    "/posts": {
      "get": {
        "operationId": "PostsController_list",
        "summary": "",
        "description": "Fetch a paginated list of posts, ordered by the time of their creation. May contain deleted posts.",
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The offset for pagination of further calls. Defaults to 0 if omitted.",
            "examples": {
              "from start": {
                "value": 0
              },
              "skip the first 100": {
                "value": 100
              }
            },
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The amount of posts that is returned in one call. Minimum is 1, maximum is 1000. Defaults to 100.",
            "examples": {
              "default": {
                "value": 100
              },
              "minimum": {
                "value": 1
              },
              "maximum": {
                "value": 1000
              }
            },
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "newerThan",
            "required": false,
            "in": "query",
            "description": "The ID of a post, to only return posts that are newer than the given post. If omitted, all posts are returned.",
            "examples": {
              "all posts": {},
              "posts newer than a given post": {
                "value": "01GEESHPQQ4NJKNZJN9AKWQW6G"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The paginated list of posts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PaginatedResult",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "uniqueItems": true,
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "Post",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "ID of the post, defined in the ULID format.",
                                "externalDocs": {
                                  "url": "https://github.com/ulid/spec",
                                  "description": "ULID Specification"
                                },
                                "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                              },
                              "creator": {
                                "type": "string",
                                "description": "ID of the user who created the post.",
                                "example": "179944860378202369"
                              },
                              "text": {
                                "type": "string",
                                "description": "Text in the post.",
                                "example": "Hello World! @user #newpost"
                              },
                              "mediaUrl": {
                                "type": "string",
                                "description": "URL - if any - to the media object attached to this post.",
                                "example": "https://storage.googleapis.com/cas-fee-adv-qwacker-api-local-dev/1094b5e0-5f30-4f0b-a342-ae12936c42ff",
                                "nullable": true
                              },
                              "mediaType": {
                                "type": "string",
                                "description": "If mediaUrl is set, this field contains the mime type of the media object.",
                                "example": "image/png",
                                "nullable": true
                              },
                              "likeCount": {
                                "type": "number",
                                "description": "Number of total likes on this post.",
                                "example": 42
                              },
                              "likedByUser": {
                                "type": "boolean",
                                "description": "Indicates if the current user liked this post. If the call was made unauthorized, all posts are returned with this field set to false.",
                                "example": true
                              },
                              "type": {
                                "type": "post",
                                "description": "Indicates, that this result is a post.",
                                "example": "post"
                              },
                              "replyCount": {
                                "type": "number",
                                "description": "Number of total replies to this post.",
                                "example": 42
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Reply",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "ID of the post, defined in the ULID format.",
                                "externalDocs": {
                                  "url": "https://github.com/ulid/spec",
                                  "description": "ULID Specification"
                                },
                                "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                              },
                              "creator": {
                                "type": "string",
                                "description": "ID of the user who created the post.",
                                "example": "179944860378202369"
                              },
                              "text": {
                                "type": "string",
                                "description": "Text in the post.",
                                "example": "Hello World! @user #newpost"
                              },
                              "mediaUrl": {
                                "type": "string",
                                "description": "URL - if any - to the media object attached to this post.",
                                "example": "https://storage.googleapis.com/cas-fee-adv-qwacker-api-local-dev/1094b5e0-5f30-4f0b-a342-ae12936c42ff",
                                "nullable": true
                              },
                              "mediaType": {
                                "type": "string",
                                "description": "If mediaUrl is set, this field contains the mime type of the media object.",
                                "example": "image/png",
                                "nullable": true
                              },
                              "likeCount": {
                                "type": "number",
                                "description": "Number of total likes on this post.",
                                "example": 42
                              },
                              "likedByUser": {
                                "type": "boolean",
                                "description": "Indicates if the current user liked this post. If the call was made unauthorized, all posts are returned with this field set to false.",
                                "example": true
                              },
                              "type": {
                                "type": "reply",
                                "description": "Indicates, that this result is a reply to a post.",
                                "example": "reply"
                              },
                              "parentId": {
                                "type": "string",
                                "format": "ulid",
                                "description": "Reference ID to the parent post.",
                                "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Delete",
                            "properties": {
                              "type": {
                                "type": "deleted",
                                "description": "Indicates, that this result is a deleted post.",
                                "example": "deleted"
                              },
                              "id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "ID of the post, defined in the ULID format.",
                                "externalDocs": {
                                  "url": "https://github.com/ulid/spec",
                                  "description": "ULID Specification"
                                },
                                "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                              },
                              "creator": {
                                "type": "string",
                                "description": "ID of the user who created the post.",
                                "example": "179944860378202369"
                              },
                              "parentId": {
                                "type": "string",
                                "description": "ID of the parent.",
                                "example": "01GDMMR85BEHP8AKV8ZGGM259K",
                                "nullable": true
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "number",
                      "example": 1000,
                      "description": "The total count of posts in the system."
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "example": "/posts?offset=100&limit=100",
                      "description": "If filled, hints the next api call to make to fetch the next page."
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "example": "/posts?offset=0&limit=100",
                      "description": "If filled, hints the next api call to make to fetch the previous page."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Posts"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      },
      "post": {
        "operationId": "PostsController_create",
        "summary": "",
        "description": "Create a new post with the logged in user. A post can contain an optional image and must contain text.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The data for the post to create.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "example": "Hello World!",
                    "description": "The text of the post."
                  },
                  "image": {
                    "type": "file",
                    "description": "The image of the post.",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The post was created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Post",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "ulid",
                      "description": "ID of the post, defined in the ULID format.",
                      "externalDocs": {
                        "url": "https://github.com/ulid/spec",
                        "description": "ULID Specification"
                      },
                      "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                    },
                    "creator": {
                      "type": "string",
                      "description": "ID of the user who created the post.",
                      "example": "179944860378202369"
                    },
                    "text": {
                      "type": "string",
                      "description": "Text in the post.",
                      "example": "Hello World! @user #newpost"
                    },
                    "mediaUrl": {
                      "type": "string",
                      "description": "URL - if any - to the media object attached to this post.",
                      "example": "https://storage.googleapis.com/cas-fee-adv-qwacker-api-local-dev/1094b5e0-5f30-4f0b-a342-ae12936c42ff",
                      "nullable": true
                    },
                    "mediaType": {
                      "type": "string",
                      "description": "If mediaUrl is set, this field contains the mime type of the media object.",
                      "example": "image/png",
                      "nullable": true
                    },
                    "likeCount": {
                      "type": "number",
                      "description": "Number of total likes on this post.",
                      "example": 42
                    },
                    "likedByUser": {
                      "type": "boolean",
                      "description": "Indicates if the current user liked this post. If the call was made unauthorized, all posts are returned with this field set to false.",
                      "example": true
                    },
                    "type": {
                      "type": "post",
                      "description": "Indicates, that this result is a post.",
                      "example": "post"
                    },
                    "replyCount": {
                      "type": "number",
                      "description": "Number of total replies to this post.",
                      "example": 42
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The uploaded file is not an image or bigger than 5MB."
          },
          "401": {
            "description": "User is unauthorized."
          },
          "403": {
            "description": "No authenticated user is found."
          }
        },
        "tags": ["Posts"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      }
    },
    "/posts/{id}": {
      "get": {
        "operationId": "PostsController_single",
        "summary": "",
        "description": "Get a specific post.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID (ulid) of the post to get.",
            "example": "01GEESHPQQ4NJKNZJN9AKWQW6G",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested post. This may be a post, a reply, or a deleted post.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "Post",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "ulid",
                          "description": "ID of the post, defined in the ULID format.",
                          "externalDocs": {
                            "url": "https://github.com/ulid/spec",
                            "description": "ULID Specification"
                          },
                          "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                        },
                        "creator": {
                          "type": "string",
                          "description": "ID of the user who created the post.",
                          "example": "179944860378202369"
                        },
                        "text": {
                          "type": "string",
                          "description": "Text in the post.",
                          "example": "Hello World! @user #newpost"
                        },
                        "mediaUrl": {
                          "type": "string",
                          "description": "URL - if any - to the media object attached to this post.",
                          "example": "https://storage.googleapis.com/cas-fee-adv-qwacker-api-local-dev/1094b5e0-5f30-4f0b-a342-ae12936c42ff",
                          "nullable": true
                        },
                        "mediaType": {
                          "type": "string",
                          "description": "If mediaUrl is set, this field contains the mime type of the media object.",
                          "example": "image/png",
                          "nullable": true
                        },
                        "likeCount": {
                          "type": "number",
                          "description": "Number of total likes on this post.",
                          "example": 42
                        },
                        "likedByUser": {
                          "type": "boolean",
                          "description": "Indicates if the current user liked this post. If the call was made unauthorized, all posts are returned with this field set to false.",
                          "example": true
                        },
                        "type": {
                          "type": "post",
                          "description": "Indicates, that this result is a post.",
                          "example": "post"
                        },
                        "replyCount": {
                          "type": "number",
                          "description": "Number of total replies to this post.",
                          "example": 42
                        }
                      }
                    },
                    {
                      "type": "object",
                      "title": "Reply",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "ulid",
                          "description": "ID of the post, defined in the ULID format.",
                          "externalDocs": {
                            "url": "https://github.com/ulid/spec",
                            "description": "ULID Specification"
                          },
                          "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                        },
                        "creator": {
                          "type": "string",
                          "description": "ID of the user who created the post.",
                          "example": "179944860378202369"
                        },
                        "text": {
                          "type": "string",
                          "description": "Text in the post.",
                          "example": "Hello World! @user #newpost"
                        },
                        "mediaUrl": {
                          "type": "string",
                          "description": "URL - if any - to the media object attached to this post.",
                          "example": "https://storage.googleapis.com/cas-fee-adv-qwacker-api-local-dev/1094b5e0-5f30-4f0b-a342-ae12936c42ff",
                          "nullable": true
                        },
                        "mediaType": {
                          "type": "string",
                          "description": "If mediaUrl is set, this field contains the mime type of the media object.",
                          "example": "image/png",
                          "nullable": true
                        },
                        "likeCount": {
                          "type": "number",
                          "description": "Number of total likes on this post.",
                          "example": 42
                        },
                        "likedByUser": {
                          "type": "boolean",
                          "description": "Indicates if the current user liked this post. If the call was made unauthorized, all posts are returned with this field set to false.",
                          "example": true
                        },
                        "type": {
                          "type": "reply",
                          "description": "Indicates, that this result is a reply to a post.",
                          "example": "reply"
                        },
                        "parentId": {
                          "type": "string",
                          "format": "ulid",
                          "description": "Reference ID to the parent post.",
                          "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "title": "Delete",
                      "properties": {
                        "type": {
                          "type": "deleted",
                          "description": "Indicates, that this result is a deleted post.",
                          "example": "deleted"
                        },
                        "id": {
                          "type": "string",
                          "format": "ulid",
                          "description": "ID of the post, defined in the ULID format.",
                          "externalDocs": {
                            "url": "https://github.com/ulid/spec",
                            "description": "ULID Specification"
                          },
                          "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                        },
                        "creator": {
                          "type": "string",
                          "description": "ID of the user who created the post.",
                          "example": "179944860378202369"
                        },
                        "parentId": {
                          "type": "string",
                          "description": "ID of the parent.",
                          "example": "01GDMMR85BEHP8AKV8ZGGM259K",
                          "nullable": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Posts"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      },
      "post": {
        "operationId": "PostsController_reply",
        "summary": "",
        "description": "Create a reply to a post with the logged in user. A reply can contain an optional image and must contain text.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID (ulid) of the post to reply to.",
            "example": "01F1ZQZQXZJZJXZQZQZQZQZQZQ",
            "schema": {
              "format": "ulid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The data for the reply to create.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "example": "Hello World!",
                    "description": "The text of the reply."
                  },
                  "image": {
                    "type": "file",
                    "description": "The image of the reply.",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The reply was created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Post",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "ulid",
                      "description": "ID of the post, defined in the ULID format.",
                      "externalDocs": {
                        "url": "https://github.com/ulid/spec",
                        "description": "ULID Specification"
                      },
                      "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                    },
                    "creator": {
                      "type": "string",
                      "description": "ID of the user who created the post.",
                      "example": "179944860378202369"
                    },
                    "text": {
                      "type": "string",
                      "description": "Text in the post.",
                      "example": "Hello World! @user #newpost"
                    },
                    "mediaUrl": {
                      "type": "string",
                      "description": "URL - if any - to the media object attached to this post.",
                      "example": "https://storage.googleapis.com/cas-fee-adv-qwacker-api-local-dev/1094b5e0-5f30-4f0b-a342-ae12936c42ff",
                      "nullable": true
                    },
                    "mediaType": {
                      "type": "string",
                      "description": "If mediaUrl is set, this field contains the mime type of the media object.",
                      "example": "image/png",
                      "nullable": true
                    },
                    "likeCount": {
                      "type": "number",
                      "description": "Number of total likes on this post.",
                      "example": 42
                    },
                    "likedByUser": {
                      "type": "boolean",
                      "description": "Indicates if the current user liked this post. If the call was made unauthorized, all posts are returned with this field set to false.",
                      "example": true
                    },
                    "type": {
                      "type": "post",
                      "description": "Indicates, that this result is a post.",
                      "example": "post"
                    },
                    "replyCount": {
                      "type": "number",
                      "description": "Number of total replies to this post.",
                      "example": 42
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The uploaded file is not an image or bigger than 5MB."
          },
          "401": {
            "description": "User is unauthorized."
          },
          "403": {
            "description": "No authenticated user is found."
          },
          "404": {
            "description": "No post with the given ID was found."
          }
        },
        "tags": ["Posts"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      },
      "delete": {
        "operationId": "PostsController_delete",
        "summary": "",
        "description": "Deletes a post or reply if it exists and if the logged in user is the author.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID (ulid) of the post that shall be deleted.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The post was deleted if it existed."
          },
          "401": {
            "description": "User is unauthorized."
          },
          "403": {
            "description": "No authenticated user is found."
          }
        },
        "tags": ["Posts"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      }
    },
    "/posts/{id}/replies": {
      "get": {
        "operationId": "PostsController_replies",
        "summary": "",
        "description": "Get an ordered list of replies for the given post.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID (ulid) of the post to get the replies from.",
            "example": "01GEESHPQQ4NJKNZJN9AKWQW6G",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of replies for a given post.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "Reply",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "ulid",
                            "description": "ID of the post, defined in the ULID format.",
                            "externalDocs": {
                              "url": "https://github.com/ulid/spec",
                              "description": "ULID Specification"
                            },
                            "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                          },
                          "creator": {
                            "type": "string",
                            "description": "ID of the user who created the post.",
                            "example": "179944860378202369"
                          },
                          "text": {
                            "type": "string",
                            "description": "Text in the post.",
                            "example": "Hello World! @user #newpost"
                          },
                          "mediaUrl": {
                            "type": "string",
                            "description": "URL - if any - to the media object attached to this post.",
                            "example": "https://storage.googleapis.com/cas-fee-adv-qwacker-api-local-dev/1094b5e0-5f30-4f0b-a342-ae12936c42ff",
                            "nullable": true
                          },
                          "mediaType": {
                            "type": "string",
                            "description": "If mediaUrl is set, this field contains the mime type of the media object.",
                            "example": "image/png",
                            "nullable": true
                          },
                          "likeCount": {
                            "type": "number",
                            "description": "Number of total likes on this post.",
                            "example": 42
                          },
                          "likedByUser": {
                            "type": "boolean",
                            "description": "Indicates if the current user liked this post. If the call was made unauthorized, all posts are returned with this field set to false.",
                            "example": true
                          },
                          "type": {
                            "type": "reply",
                            "description": "Indicates, that this result is a reply to a post.",
                            "example": "reply"
                          },
                          "parentId": {
                            "type": "string",
                            "format": "ulid",
                            "description": "Reference ID to the parent post.",
                            "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "title": "Delete",
                        "properties": {
                          "type": {
                            "type": "deleted",
                            "description": "Indicates, that this result is a deleted post.",
                            "example": "deleted"
                          },
                          "id": {
                            "type": "string",
                            "format": "ulid",
                            "description": "ID of the post, defined in the ULID format.",
                            "externalDocs": {
                              "url": "https://github.com/ulid/spec",
                              "description": "ULID Specification"
                            },
                            "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                          },
                          "creator": {
                            "type": "string",
                            "description": "ID of the user who created the post.",
                            "example": "179944860378202369"
                          },
                          "parentId": {
                            "type": "string",
                            "description": "ID of the parent.",
                            "example": "01GDMMR85BEHP8AKV8ZGGM259K",
                            "nullable": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": ["Posts"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      }
    },
    "/posts/search": {
      "post": {
        "operationId": "PostsController_search",
        "summary": "",
        "description": "Search for posts or replies in the database. The result is always paginated and ordered by the time of their creation.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The search parameters.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "SearchParams",
                "nullable": false,
                "properties": {
                  "text": {
                    "type": "string",
                    "nullable": true,
                    "description": "Search for posts that contain this text.",
                    "example": "Hello World"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": false,
                      "description": "Search for posts that contain this tag (#TEXT).",
                      "example": "newpost"
                    }
                  },
                  "mentions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": false,
                      "description": "Search for posts that contain this mention to a user (@TEXT).",
                      "example": "smartive"
                    }
                  },
                  "isReply": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Search for posts that are replies to other posts. If omitted, all posts are searched.",
                    "example": false
                  },
                  "offset": {
                    "type": "number",
                    "nullable": true,
                    "default": 0,
                    "example": 0,
                    "description": "The offset for pagination of further calls."
                  },
                  "limit": {
                    "type": "number",
                    "nullable": true,
                    "default": 100,
                    "example": 500,
                    "description": "The amount of posts that is returned in one call. Minimum is 1, maximum is 1000."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The paginated search result.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PaginatedSearchResult",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "uniqueItems": true,
                        "oneOf": [
                          {
                            "type": "object",
                            "title": "Post",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "ID of the post, defined in the ULID format.",
                                "externalDocs": {
                                  "url": "https://github.com/ulid/spec",
                                  "description": "ULID Specification"
                                },
                                "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                              },
                              "creator": {
                                "type": "string",
                                "description": "ID of the user who created the post.",
                                "example": "179944860378202369"
                              },
                              "text": {
                                "type": "string",
                                "description": "Text in the post.",
                                "example": "Hello World! @user #newpost"
                              },
                              "mediaUrl": {
                                "type": "string",
                                "description": "URL - if any - to the media object attached to this post.",
                                "example": "https://storage.googleapis.com/cas-fee-adv-qwacker-api-local-dev/1094b5e0-5f30-4f0b-a342-ae12936c42ff",
                                "nullable": true
                              },
                              "mediaType": {
                                "type": "string",
                                "description": "If mediaUrl is set, this field contains the mime type of the media object.",
                                "example": "image/png",
                                "nullable": true
                              },
                              "likeCount": {
                                "type": "number",
                                "description": "Number of total likes on this post.",
                                "example": 42
                              },
                              "likedByUser": {
                                "type": "boolean",
                                "description": "Indicates if the current user liked this post. If the call was made unauthorized, all posts are returned with this field set to false.",
                                "example": true
                              },
                              "type": {
                                "type": "post",
                                "description": "Indicates, that this result is a post.",
                                "example": "post"
                              },
                              "replyCount": {
                                "type": "number",
                                "description": "Number of total replies to this post.",
                                "example": 42
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "Reply",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "ulid",
                                "description": "ID of the post, defined in the ULID format.",
                                "externalDocs": {
                                  "url": "https://github.com/ulid/spec",
                                  "description": "ULID Specification"
                                },
                                "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                              },
                              "creator": {
                                "type": "string",
                                "description": "ID of the user who created the post.",
                                "example": "179944860378202369"
                              },
                              "text": {
                                "type": "string",
                                "description": "Text in the post.",
                                "example": "Hello World! @user #newpost"
                              },
                              "mediaUrl": {
                                "type": "string",
                                "description": "URL - if any - to the media object attached to this post.",
                                "example": "https://storage.googleapis.com/cas-fee-adv-qwacker-api-local-dev/1094b5e0-5f30-4f0b-a342-ae12936c42ff",
                                "nullable": true
                              },
                              "mediaType": {
                                "type": "string",
                                "description": "If mediaUrl is set, this field contains the mime type of the media object.",
                                "example": "image/png",
                                "nullable": true
                              },
                              "likeCount": {
                                "type": "number",
                                "description": "Number of total likes on this post.",
                                "example": 42
                              },
                              "likedByUser": {
                                "type": "boolean",
                                "description": "Indicates if the current user liked this post. If the call was made unauthorized, all posts are returned with this field set to false.",
                                "example": true
                              },
                              "type": {
                                "type": "reply",
                                "description": "Indicates, that this result is a reply to a post.",
                                "example": "reply"
                              },
                              "parentId": {
                                "type": "string",
                                "format": "ulid",
                                "description": "Reference ID to the parent post.",
                                "example": "01GDMMR85BEHP8AKV8ZGGM259K"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "number",
                      "example": 1000,
                      "description": "The total count of posts in the executed search."
                    },
                    "next": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "nullable": true,
                          "description": "Search for posts that contain this text.",
                          "example": "Hello World"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "nullable": false,
                            "description": "Search for posts that contain this tag (#TEXT).",
                            "example": "newpost"
                          }
                        },
                        "mentions": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "nullable": false,
                            "description": "Search for posts that contain this mention to a user (@TEXT).",
                            "example": "smartive"
                          }
                        },
                        "isReply": {
                          "type": "boolean",
                          "nullable": true,
                          "description": "Search for posts that are replies to other posts. If omitted, all posts are searched.",
                          "example": false
                        },
                        "offset": {
                          "type": "number",
                          "nullable": true,
                          "default": 0,
                          "example": 0,
                          "description": "The offset for pagination of further calls."
                        },
                        "limit": {
                          "type": "number",
                          "nullable": true,
                          "default": 100,
                          "example": 500,
                          "description": "The amount of posts that is returned in one call. Minimum is 1, maximum is 1000."
                        }
                      },
                      "nullable": true,
                      "description": "If filled, hints the search parameters for the next page."
                    },
                    "previous": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "nullable": true,
                          "description": "Search for posts that contain this text.",
                          "example": "Hello World"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "nullable": false,
                            "description": "Search for posts that contain this tag (#TEXT).",
                            "example": "newpost"
                          }
                        },
                        "mentions": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "nullable": false,
                            "description": "Search for posts that contain this mention to a user (@TEXT).",
                            "example": "smartive"
                          }
                        },
                        "isReply": {
                          "type": "boolean",
                          "nullable": true,
                          "description": "Search for posts that are replies to other posts. If omitted, all posts are searched.",
                          "example": false
                        },
                        "offset": {
                          "type": "number",
                          "nullable": true,
                          "default": 0,
                          "example": 0,
                          "description": "The offset for pagination of further calls."
                        },
                        "limit": {
                          "type": "number",
                          "nullable": true,
                          "default": 100,
                          "example": 500,
                          "description": "The amount of posts that is returned in one call. Minimum is 1, maximum is 1000."
                        }
                      },
                      "nullable": true,
                      "description": "If filled, hints the search parameters for the previous page."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Posts"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      }
    },
    "/posts/{id}/likes": {
      "put": {
        "operationId": "LikesController_like",
        "summary": "",
        "description": "Create a like on a specific post.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID (ulid) of the post to like.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The like was created."
          },
          "401": {
            "description": "User is unauthorized."
          },
          "403": {
            "description": "No authenticated user is found."
          }
        },
        "tags": ["Likes"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      },
      "delete": {
        "operationId": "LikesController_unlike",
        "summary": "",
        "description": "Delete a like on a specific post.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID (ulid) of the post to unlike.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The like was deleted. This is also returned when no specific userId/postId like was found."
          },
          "401": {
            "description": "User is unauthorized."
          },
          "403": {
            "description": "No authenticated user is found."
          }
        },
        "tags": ["Likes"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UsersController_list",
        "summary": "",
        "description": "Fetch a paginated list of users, ordered by their username.",
        "parameters": [
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The offset for pagination of further calls. Defaults to 0 if omitted.",
            "examples": {
              "from start": {
                "value": 0
              },
              "skip the first 100": {
                "value": 100
              }
            },
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The amount of users that is returned in one call. Minimum is 1, maximum is 1000. Defaults to 100.",
            "examples": {
              "default": {
                "value": 100
              },
              "minimum": {
                "value": 1
              },
              "maximum": {
                "value": 1000
              }
            },
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The paginated list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PaginatedResult",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "uniqueItems": true,
                        "type": "object",
                        "title": "User",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The (long) ID of the user.",
                            "example": "179828644301046017"
                          },
                          "userName": {
                            "type": "string",
                            "description": "The username of the user. May be used to mention someone in the posts.",
                            "example": "johnDoe"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "The first name of the user.",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "The last name of the user.",
                            "example": "Doe"
                          },
                          "avatarUrl": {
                            "type": "string",
                            "description": "URL to the avatar of the user. This field may be empty (empty string)."
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "number",
                      "example": 1000,
                      "description": "The total count of users in the system."
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "example": "/users?offset=100&limit=100",
                      "description": "If filled, hints the next api call to make to fetch the next page."
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "example": "/users?offset=0&limit=100",
                      "description": "If filled, hints the next api call to make to fetch the previous page."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "operationId": "UsersController_me",
        "summary": "",
        "description": "Fetch your own authenticated profile.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Your own profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "User",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The (long) ID of the user.",
                      "example": "179828644301046017"
                    },
                    "userName": {
                      "type": "string",
                      "description": "The username of the user. May be used to mention someone in the posts.",
                      "example": "johnDoe"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user.",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user.",
                      "example": "Doe"
                    },
                    "avatarUrl": {
                      "type": "string",
                      "description": "URL to the avatar of the user. This field may be empty (empty string)."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_getById",
        "summary": "",
        "description": "Fetch a user by id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "User",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The (long) ID of the user.",
                      "example": "179828644301046017"
                    },
                    "userName": {
                      "type": "string",
                      "description": "The username of the user. May be used to mention someone in the posts.",
                      "example": "johnDoe"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The first name of the user.",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The last name of the user.",
                      "example": "Doe"
                    },
                    "avatarUrl": {
                      "type": "string",
                      "description": "URL to the avatar of the user. This field may be empty (empty string)."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [
          {
            "ZITADEL": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "qwacker API",
    "description": "API for 'mumble'. A simple messaging/twitter like api for the CAS Frontend Engineering Advanced.",
    "version": "1.9.4",
    "contact": {
      "name": "smartive AG",
      "url": "https://smartive.ch",
      "email": "education@smartive.ch"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "tags": [
    {
      "name": "Posts",
      "description": "All related endpoints for posts. Allows creating, deleting, replying and searching."
    },
    {
      "name": "Likes",
      "description": "Like and unlike posts."
    },
    {
      "name": "Users",
      "description": "User related calls. Fetch information about users in the system."
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "ZITADEL": {
        "type": "openIdConnect",
        "flows": {},
        "description": "ZITADEL Authentication",
        "name": "ZITADEL",
        "in": "header",
        "openIdConnectUrl": "https://cas-fee-advanced-ocvdad.zitadel.cloud/.well-known/openid-configuration"
      }
    },
    "schemas": {}
  }
}
